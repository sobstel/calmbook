{"ast":null,"code":"var _jsxFileName = \"/Users/sobstel/Projects/calmbook/pages/[slug].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nexport var __N_SSP = true;\nexport default function CalmbookPage(_ref) {\n  var data = _ref.data;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, data);\n}","map":{"version":3,"sources":["/Users/sobstel/Projects/calmbook/pages/[slug].tsx"],"names":["CalmbookPage","data"],"mappings":";;;;AAYA,eAAe,SAASA,YAAT,OAAuC;AAAA,MAAfC,IAAe,QAAfA,IAAe;AAEpD,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAN,CAAR;AACD","sourcesContent":["import { NextPageContext } from \"next\";\nimport axios from \"axios\";\nimport { setupCache } from \"axios-cache-adapter\";\n\nconst cache = setupCache({ maxAge: 5 * 60 * 1000 });\n// @ts-ignore\nconst cachedAxios = axios.create({ adapter: cache.adapter });\n\ntype Props = {\n  data: string;\n}\n\nexport default function CalmbookPage({ data }: Props) {\n\n  return (<div>{data}</div>);\n}\n\nexport async function getServerSideProps({ query }: NextPageContext) {\n  const { slug } = query;\n\n  // TODO: check for context.preview\n\n  const sanitizedSlug = sanitizeSlug(slug as string);\n  if (!sanitizedSlug) {\n    throw new Error(\n      \"provide valid page url, eg. https://calmbook.sobstel.now.sh/TurismoArgentina\"\n    );\n  }\n\n  const response = await cachedAxios.get(\n    `https://www.facebook.com/${sanitizedSlug}/posts`\n  );\n\n  const data = { response };\n\n  // Pass data to the page via props\n  return { props: { data } }\n}\n\nconst sanitizeSlug = (url?: string): string | undefined => {\n  if (!url) return;\n\n  let sanitizedUrl = url;\n  sanitizedUrl = sanitizedUrl.trim();\n  sanitizedUrl = sanitizedUrl.replace(/\\/+$/g, \"\"); // trailing slashes\n  sanitizedUrl = sanitizedUrl.replace(/^\\/+/g, \"\"); // leading slashes\n  sanitizedUrl = sanitizedUrl.replace(/\\.\\w{3}$/, \"\"); // extension (format)\n  sanitizedUrl = sanitizedUrl.replace(/#.+$/, \"\"); // fragment link\n\n  return sanitizedUrl;\n}\n"]},"metadata":{},"sourceType":"module"}