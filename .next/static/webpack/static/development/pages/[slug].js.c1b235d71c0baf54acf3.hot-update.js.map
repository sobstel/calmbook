{"version":3,"file":"static/webpack/static/development/pages/[slug].js.c1b235d71c0baf54acf3.hot-update.js","sources":["webpack:///./pages/[slug].tsx"],"sourcesContent":["import { NextPageContext } from \"next\";\nimport axios from \"axios\";\nimport { setupCache } from \"axios-cache-adapter\";\nimport cheerio from \"cheerio\";\n\nconst cache = setupCache({ maxAge: 5 * 60 * 1000 });\n// @ts-ignore\nconst cachedAxios = axios.create({ adapter: cache.adapter });\n\ntype Props = {\n  data: string;\n}\n\nexport default function CalmbookPage({ data }: Props) {\n\n  return (<div>{data}</div>);\n}\n\nexport async function getServerSideProps({ query }: NextPageContext) {\n  const { slug } = query;\n\n  // TODO: check for context.preview\n\n  const sanitizedSlug = sanitizeSlug(slug as string);\n  if (!sanitizedSlug) {\n    throw new Error(\n      \"provide valid page url, eg. https://calmbook.sobstel.now.sh/TurismoArgentina\"\n    );\n  }\n\n  const response = await cachedAxios.get(\n    `https://www.facebook.com/${sanitizedSlug}/posts`\n  );\n\n  // TODO: prase to JSON using builders or so\n  // const $ = cheerio.load(response.data);\n\n  // Pass JSON here\n  return { props: { data: response.data } }\n}\n\nconst sanitizeSlug = (url?: string): string | undefined => {\n  if (!url) return;\n\n  let sanitizedUrl = url;\n  sanitizedUrl = sanitizedUrl.trim();\n  sanitizedUrl = sanitizedUrl.replace(/\\/+$/g, \"\"); // trailing slashes\n  sanitizedUrl = sanitizedUrl.replace(/^\\/+/g, \"\"); // leading slashes\n  sanitizedUrl = sanitizedUrl.replace(/\\.\\w{3}$/, \"\"); // extension (format)\n  sanitizedUrl = sanitizedUrl.replace(/#.+$/, \"\"); // fragment link\n\n  return sanitizedUrl;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAaA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}